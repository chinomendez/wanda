.Swatch {
  position: relative;
}


.Color {
  block-size: 90px;
  min-block-size: 90px;
  max-block-size: 90px;
  border-radius: env(--radius-4);
  color: hsl(env(--color-support-white));
  background:
    var(--dimmed-0)
    repeating-conic-gradient(
      var(--dimmed-1) 0% 25%,
      transparent 0% 50%
    )
    50% / 23.5px 23.5px;
  position: relative;

  &::after {
    content: '';
    display: block;
    position: absolute;
    background-color: var(--backgroundColor);
    box-shadow: inset 0 0 0 2px rgba(0, 0, 0, 0.05);
    inset: 0;
  }


  & b {
    background: inherit;
    background-clip: inherit;
    background-clip: text;
    color: transparent;
    filter: invert(1) grayscale(1) contrast(100);
  }
}

.CopyColor.CopyColor {
  opacity: 0;
  pointer-events: none;
  transition: opacity 0.2s;
  background-color: var(--backgroundColor);

  &:hover {
    background-color: var(--backgroundColor);
  }

  @nest .Swatch:is(:hover, :focus-within) & {
    opacity: 1;
    pointer-events: auto;
  }
}

.Values {
  font-family: monospace;
}
